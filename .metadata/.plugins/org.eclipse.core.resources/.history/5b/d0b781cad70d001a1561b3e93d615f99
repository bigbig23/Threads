package test;

import java.util.Random;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

 

public class TestApp {
	
	public static BlockingQueue<Integer> queue = new ArrayBlockingQueue<Integer>(10);


	public static void main(String[] args) {

		CountDownLatch latch = new CountDownLatch(3);
		ExecutorService executor = Executors.newFixedThreadPool(3);

		for (int i = 0; i < 10; i++) {
			executor.submit(new Processor(latch));
		}

 

	}
	
	public static Random rnd = new Random();
	
	public static void producer() throws InterruptedException {
		while(true) {
			queue.put(rnd.nextInt(100));
		}
	}
	
	public static void consumer() throws InterruptedException {
		while(true) {
			Thread.sleep(100);
			//I just did this to get "if" to execute only one out of every ten times. 
			//So I could have written == 8 or any other number.
			if(rnd.nextInt(10)==0) {
				Integer value = queue.take();
				System.out.println("Taken value : " + value + " Queue size : " + queue.size());
			}
 		}
	}
	

}
