package test;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

class Processor implements Runnable{
	private CountDownLatch latch;
	public Processor(CountDownLatch latch) {
		this.latch = latch;
	}
	@Override
	public void run() {
 		System.out.println("Started ...");
 		try {
			Thread.sleep(100);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
 		latch.countDown();
 		
 		System.out.println("finished ...");

 		
	}
	
	
	
}
 




public class TestApp {
	
	public static void main(String[] args) {
 
		
		CountDownLatch latch = new CountDownLatch(3);
		ExecutorService exeutor = Executors.newFixedThreadPool(3);
		
		for(int i =0;i<3;i++) {
			exeutor.submit(new Processor(latch));
		}
		
		
		try {
			latch.wait();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		System.out.println("Finished ....");
 
 
	 
	 
		
	}


}
